_alchemist_projects: &alchemist
  Alchemist: develop
  alchemist-primer:
  Protelis-Incarnation-tutorial:
  SAPERE-incarnation-tutorial:

_protelis_projects: &protelis
  Protelis: develop
  Protelis-Demo:
  Protelis-KDoc-generator: develop
  Protelis-Parser: develop

_my_latex: &my_latex
  Course-DevOps-for-scientific-research:
  Course-DevOps-Introduction:
  Course-Simulation-Basics:
  Curriculum-Vitae:
  Paper-2019-Genetic-network-dsl:
  Paper-2019-IEEE-Software-Protelis:
  Paper-2019-PMC-SmartCam:
  Paper-2020-LMCS-TimeFluid:
  Template-ACM-Article:
  Template-Elsevier-Article:
  Template-Elsevier-CAS-DC:
  Template-IEEE-Computer-Society-Magazines:
  Template-IEEE-Conference-Proceedings:
  Template-LaTeX-achemso:
  Template-LaTeX-CI:
  Template-LaTeX-ERC:
  Template-LaTeX-LMCS:
  Template-LaTeX-MDPI:

_gradle_plugins: &gradle_plugins
  git-sensitive-semantic-versioning-gradle-plugin:
  gradle-latex:
  maven-central-gradle-plugin:
  refreshversions-aliases:
  Template-for-Gradle-Plugins:

_my_java: &my_java
  <<: *gradle_plugins
  Aggregate-Computing-Backend:
  Aggregate-Computing-Client:
  Alchemist-experiments-startup:
  alchemist-intellij-plugin:
  boilerplate:
  compute-my-taxes:
  conrec:
  Course-DevOps-for-scientific-research:
  graphstream:
  graphstream-gs-algo:
  graphstream-gs-core:
  graphstream-gs-ui-swing:
  gson-extras:
  java-quadtree:
  jirf:
  khttp:
  listset:
  maven-central-gradle-plugin:
  oop-reporting-machinery:
  OrchidForScience:
  sportstracker:
  Template-for-Kotlin-Gradle-Projects:
  Template-for-Kotlin-JVM-Projects:
  Thread-Inheritable-Resource-Loader-for-Java:
  upgradle:

_java_multiplatform: &java_multiplatform
  AGCT-DSL:
    AGCT: develop
  AlchemistSimulator:
    *alchemist
  DanySK:
    <<: *my_java
    Course-DevOps-Introduction:
  Protelis:
    *protelis

_java11+: &java11_or_above
  AlchemistSimulator:
    *alchemist
  DanySK:
    Alchemist-experiments-startup:
    Course-DevOps-Introduction:
    jirf:
    oop-reporting-machinery:
    sportstracker:

_java8-linux-only: &java8_linux
  DanySK:
    gradle-latex:
    graphstream:

_my_jekyll: &my_jekyll
  danysk.github.io:
  jekyll-freelancer-theme:
  libri-antichi:
  Template-Jekyll-Cayman:
  Template-Jekyll-Vitae: gh-pages

_my_docker_linux: &docker_linux
  docker-linux-didattica:
  docker-manjaro-linux-with-yay:
  docker-manjaro-programming-cli-tools:
  docker-manjaro-with-zsh:

_no_deployment: &no_deployment
  DanySK:
    graphstream-gs-algo:
    graphstream-gs-core:
    graphstream-gs-ui-swing:
    oop-reporting-machinery:

_automerge: &automerge
  AGCT-DSL:
    AGCT: develop
  AlchemistSimulator:
    *alchemist
  DanySK:
    <<: *my_java
    <<: *my_latex
    <<: *docker_linux
    <<: *my_jekyll
    Course-Laboratory-of-Software-Systems:
    Gradle-Wrapper:
  Fluidware-Project:
    fluidware-project.github.io:
  Protelis:
    *protelis

files:
  Automerge on non-CI events:
    *automerge

  Compatibility check for Java 11 projects:
    *java11_or_above

  Compatibility check for Linux-only Java 8 projects:
    *java8_linux

  Disable deployment script:
    *no_deployment

  Docker Linux build and deploy:
    DanySK:
      *docker_linux

  editor config:

  git attributes:
    AGCT-DSL:
      AGCT: develop
    AlchemistSimulator:
      *alchemist
    DanySK:
      <<: *my_java
      <<: *my_latex
      <<: *docker_linux
      <<: *my_jekyll
      Course-Laboratory-of-Software-Systems:
      Gradle-Wrapper:
    Protelis:
      *protelis

  Java multiplatform continuous integration pipeline:
    *java_multiplatform

  Jekyllrb site build:
    DanySK:
      *my_jekyll
    Fluidware-Project:
      fluidware-project.github.io:

  LaTeX build and delivery:
    DanySK:
      *my_latex
    gciatto-unibo:
      alchemist-softwareX-2020:
      thesis-template:

secrets:
  AUTOMERGE_TOKEN:
    *automerge

  DOCKER_PASSWORD:
    DanySK:
      *docker_linux

  GRADLE_PUBLISH_KEY:
    DanySK:
      *gradle_plugins

  GRADLE_PUBLISH_SECRET:
    DanySK:
      *gradle_plugins

  MAVEN_CENTRAL_PASSWORD:
    *java_multiplatform

  SIGNING_KEY:
    *java_multiplatform

  SIGNING_PASSWORD:
    *java_multiplatform

  SURGE_LOGIN:
    AlchemistSimulator: Alchemist
    Protelis: Protelis

  SURGE_TOKEN:
    AlchemistSimulator: Alchemist
    Protelis: Protelis
